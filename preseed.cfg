choose-mirror-bin mirror/http/proxy string
d-i base-installer/kernel/override-image string linux-server
d-i clock-setup/utc boolean true
d-i clock-setup/utc-auto boolean true
d-i finish-install/reboot_in_progress note
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

# No warning for no swap

d-i partman-basicfilesystems/no_swap boolean false

# Use LVM for partitioning
d-i   partman-auto/method string lvm

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. Preseed this away
d-i     partman-lvm/device_remove_lvm boolean true

# And the same goes for the confirmation to write the lvm partitions.
d-i     partman-lvm/confirm boolean true

# Really, please don't prompt me!
d-i     partman-lvm/confirm_nooverwrite boolean true

#  partitioning
# Physical partitions:
# 1. BIOS boot partition: 1 MB See https://wiki.archlinux.org/index.php/GRUB2#GUID_Partition_Table_.28GPT.29_specific_instructions
# 2. Boot partition: 250 MB
# 2. LVM, with the following logical volumes
#     - Root partition: 250 GB (256000 MB), ext4.
#     - Swap: 100% of RAM
#     - Data partition: remaining space, XFS
d-i partman-auto/expert_recipe string                         \
      boot-root ::                                            \
              1 1 1 free method{ biosgrub } .                 \
              250 250 250 ext4                                \
                      $primary{ } $bootable{ }                \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ /boot }                     \
              .                                               \
              256000 256000 256000 ext4                       \
                      lv_name{ root }                         \
                      method{ lvm } format{ }                 \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ / }                         \
                      $lvmok{ }                               \
              .                                               \
              1024 1024 -1 ext4                                \
                      lv_name{ data }                         \
                      method{ lvm } format{ }                 \
                      use_filesystem{ } filesystem{ ext4 }     \
                      mountpoint{ /data }                     \
                      $lvmok{ }                               \
              .

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i     partman-partitioning/confirm_write_new_label boolean true
d-i     partman/choose_partition select finish
d-i     partman/confirm boolean true
d-i     partman/confirm_nooverwrite boolean true

d-i pkgsel/include string openssh-server cryptsetup build-essential libssl-dev libreadline-dev zlib1g-dev linux-source dkms nfs-common
d-i pkgsel/install-language-support boolean false
d-i pkgsel/update-policy select none
d-i pkgsel/upgrade select full-upgrade
d-i time/zone string UTC
tasksel tasksel/first multiselect standard, ubuntu-server

d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string us
d-i keyboard-configuration/modelcode string pc105
d-i debian-installer/locale string en_US

# install open-vm-tools
d-i pkgsel/include string open-vm-tools openssh-server perl

# Create vagrant user account.
d-i passwd/user-fullname string vagrant
d-i passwd/username string vagrant
d-i passwd/user-password password vagrant
d-i passwd/user-password-again password vagrant
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false
d-i passwd/user-default-groups vagrant sudo
d-i preseed/late_command string \
    echo 'vagrant ALL=(ALL) NOPASSWD: ALL' > /target/etc/sudoers.d/vagrant ; \
    in-target chmod 440 /etc/sudoers.d/vagrant ;
